[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "trading-agent"
version = "1.0.0"
description = "INoT-inspired Trading Agent with Tool Stack, Multi-Broker Support, and LLM Orchestration"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = ["trading", "algorithmic-trading", "llm", "agent", "mt5", "binance"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # Core
    "numpy>=1.24.0",
    "pandas>=2.0.0",

    # Technical Analysis
    "ta-lib>=0.4.28",  # Note: requires binary installation

    # Broker APIs
    "python-binance>=1.0.19",
    "ib-insync>=0.9.86",  # Interactive Brokers

    # HTTP/Async
    "requests>=2.31.0",
    "aiohttp>=3.9.0",

    # Data validation
    "pydantic>=2.5.0",

    # Utilities
    "python-dateutil>=2.8.2",
    "pytz>=2023.3",
]

[project.optional-dependencies]
windows = [
    "MetaTrader5>=5.0.45",
]
technical-analysis = [
    # pandas-ta has no Python 3.11+ wheels on PyPI as of 2024-11
    # Users who rely on pandas-ta can install a compatible build manually.
    "pandas-ta>=0.3.14b0; python_version < '3.11'",
]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    
    # Linting & Formatting
    "ruff>=0.1.6",
    "mypy>=1.7.0",
    "black>=23.11.0",
    
    # Type stubs
    "pandas-stubs>=2.0.0",
    "types-requests>=2.31.0",
    "types-python-dateutil>=2.8.0",
]

llm = [
    # LLM Integration (optional - user provides API keys)
    "anthropic>=0.8.0",
    "openai>=1.3.0",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
]

[project.urls]
Homepage = "https://github.com/jackpalm88/Financial-Agent"
Repository = "https://github.com/jackpalm88/Financial-Agent"
Documentation = "https://github.com/jackpalm88/Financial-Agent#readme"
"Bug Tracker" = "https://github.com/jackpalm88/Financial-Agent/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src/trading_agent",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--strict-markers",
    "-v"
]
markers = [
    "unit: Unit tests (fast, no external dependencies)",
    "integration: Integration tests (may require broker connections)",
    "slow: Slow tests (>1 second)",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "B027",  # empty method in abstract base class without decorator (intentional)
    "C901",  # too complex (we'll handle case-by-case)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py
"tests/*" = ["B", "F841"]  # Relax rules for tests

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "MetaTrader5.*",
    "binance.*",
    "ib_insync.*",
    "talib.*",
    "pandas_ta.*",
]
ignore_missing_imports = true

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''
